diff --git a/ckan/ckan/logic/auth/get.py b/ckan/ckan/logic/auth/get.py
index 1d70ee8b4..4961abc27 100644
--- a/ckan/ckan/logic/auth/get.py
+++ b/ckan/ckan/logic/auth/get.py
@@ -2,6 +2,7 @@
 
 import ckan.logic as logic
 import ckan.authz as authz
+import os
 from ckan.common import _, config
 from ckan.logic.auth import (get_package_object, get_group_object,
                              get_resource_object,
@@ -159,7 +160,7 @@ def group_show(context: Context, data_dict: DataDict) -> AuthResult:
     user = context.get('user')
     group = get_group_object(context, data_dict)
     if group.state == 'active':
-        if config.get('ckan.auth.public_user_details') or \
+        if (config.get('ckan.auth.public_user_details') or asbool(os.environ.get('CKAN__AUTH__PUBLIC_USER_DETAILS', True))) or \
             (not asbool(data_dict.get('include_users', False)) and
                 (data_dict.get('object_type', None) != 'user')):
             return {'success': True}
@@ -233,6 +234,7 @@ def get_site_user(context: Context, data_dict: DataDict) -> AuthResult:
 def member_roles_list(context: Context, data_dict: DataDict) -> AuthResult:
     return {'success': True}
 
+
 def user_follower_list(context: Context, data_dict: DataDict) -> AuthResult:
     return authz.is_authorized('sysadmin', context, data_dict)
 
@@ -379,81 +381,97 @@ def dataset_followee_count(context: Context, data_dict: DataDict) -> AuthResult:
     Visible to all by default.'''
     return {'success': True}
 
+
 def group_followee_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of groups followed by a user are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def organization_followee_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of organizations followed by a user are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def user_followee_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of users followed by a user are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def followee_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of objects (of any type) followed by a user are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def dataset_follower_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of followers of a dataset are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def group_follower_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of followers of a group are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def organization_follower_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of followers of an organization are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def user_follower_count(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the number of followers of a user are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def am_following_dataset(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the information about following a dataset is visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def am_following_group(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the information about following a group is visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def am_following_user(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the information about following a user is visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def group_package_show(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the set of datasets belonging to a group is visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def member_list(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the members of a given group are visible.
     Visible to all by default.'''
     return {'success': True}
 
+
 def resource_search(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if resource search is allowed.
     Allowed for all by default.'''
     return {'success': True}
 
+
 def tag_search(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if tag search is allowed.
     Allowed for all by default.'''
     return {'success': True}
 
+
 def term_translation_show(context: Context, data_dict: DataDict) -> AuthResult:
     '''Check if the translations for the given term(s) and language(s) are visible.
     Visible to all by default.'''
